CC = C:\avr\bin\avr-gcc
OBJCOPY = C:\avr\bin\avr-objcopy
OBJDUMP = C:\avr\bin\avr-objdump
AVRSIZE = C:\avr\bin\avr-size
MCU = atmega328p
CFLAGS = -Wall -Wextra -Wundef -pedantic -Os -std=gnu99 -DF_CPU=16000000UL -mmcu=$(MCU) -DBAUD=19200
LDFLAGS = -mmcu=$(MCU)
PORT = \\\\.\\COM3
BIN = Irrigation_System
OUT = $(BIN).hex
SOURCES = main.c uart.c millis.c lcd.c dht22.c yl69.c SSD1306.c TWI.c
GTEST = gtest
LIBGTEST = C:\msys64\mingw64\lib\libgtest_main.a C:\msys64\mingw64\lib\libgtest.a

DEBUG ?= 1

ifeq ($(DEBUG), 1)
    OUTPUTDIR = bin/debug
else
    OUTPUTDIR = bin/release
endif

OBJS = $(addprefix $(OUTPUTDIR)/,$(SOURCES:.c=.o))

all: $(OUTPUTDIR) $(OUT)

$(OBJS): Makefile

$(OUTPUTDIR)/%.o: %.c
	$(CC) $(CFLAGS) -MD -o $@ -c $<

%.lss: %.elf
	$(OBJDUMP) -h -S -s $< > $@

%.elf: $(OBJS)
	$(CC) -Wl,-Map=$(@:.elf=.map) $(LDFLAGS) -o $@ $^
	$(AVRSIZE) $@

$(OBJS): $(SOURCES)

%.hex: %.elf
	$(OBJCOPY) -O ihex -R .fuse -R .lock -R .user_signatures -R .comment $< $@

isp: ${BIN}.hex
	$(OBJISP) -F -V -c arduino -p ${MCU} -P ${PORT} -U flash:w:$<

clean:
	del "$(OUT)" *.map *.P *.d

$(OUTPUTDIR):
	@mkdir "$(OUTPUTDIR)"

# Define your Unity test files and build your test executable
TEST_SOURCES = testYl69.c unity.c yl69.c# Add your test files here
TEST_OBJ = $(addprefix $(OUTPUTDIR)/,$(TEST_SOURCES:.c=.o))
TEST_EXE = $(OUTPUTDIR)/unittest1.exe

$(TEST_OBJ): Makefile

$(OUTPUTDIR)/%.o: %.c
	$(CC) $(CFLAGS) -MD -o $@ -c $<

$(TEST_EXE): $(TEST_OBJ)
	$(CC) -o $@ $^ $(CFLAGS)

# Define a target to run tests on the AVR microcontroller
test: $(TEST_EXE)
	./$(TEST_EXE)
